@model TDC.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
}

<h2>@ViewBag.Title.</h2>

@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <h4>Create a new account.</h4>
    <hr />
    @Html.TextArea("TimeZoneOffset", new { @class = "hidden", id = "timezone" })
<script src="//code.jquery.com/jquery-1.10.2.js"></script>

    <script>
        $( document ).ready( function() {
            var timezone_element = document.getElementById('timezone');
            var date = new Date();
            timezone_element.value = date.getTimezoneOffset() / 60;
            
        } )
</script>

    @Html.ValidationSummary("", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Zip, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Zip, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Affil, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Affil, new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.again, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.CheckBoxFor(m => m.again, new { @class = "form-control" })
        </div>
    </div>
        <div class="form-group">
        @Html.LabelFor(m => m.ParticipantOrOrgan, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.CheckBoxFor(m => m.ParticipantOrOrgan, new { @class = "form-control" })
        </div>
    </div>

    //Dropdown for sex
    <div class="form-group">
        @Html.LabelFor(m => m.sex, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
           @Html.DropDownListFor(m => m.sex, new List<SelectListItem>
      {
          new SelectListItem {Text = "Male", Value = "1"},
          new SelectListItem {Text = "Female", Value = "2"},
          new SelectListItem {Text = "Other", Value = "3"}
          
          
      }, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.type, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.type, new List<SelectListItem>
      {
          new SelectListItem {Text = "Other", Value = "1"},
          new SelectListItem {Text = "High School Student", Value = "2"},
          new SelectListItem {Text = "College Student", Value = "3"}


      }, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.level, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @*@Html.DropDownListFor(m => m.level, new List<SelectListItem>
      {
          new SelectListItem {Text = "Beginner", Value = "1"},
          new SelectListItem {Text = "Intermediate", Value = "2"},
          new SelectListItem {Text = "Advanced", Value = "3"}


      }, new { @class = "form-control" })*@
            @Html.RadioButton("FormLevel", 1, true)  Beginner - $2 for each day up front, but no more income. No Shocks. Select number of days you want to play:  @Html.DropDownList("DaysPlayed", new List<SelectListItem>
      {
          new SelectListItem {Text = "1", Value = "1"},
          new SelectListItem {Text = "2", Value = "2"},
          new SelectListItem {Text = "3", Value = "3"},
          new SelectListItem {Text = "4", Value = "4"},
          new SelectListItem {Text = "5", Value = "5"}

      }, new { }) <br />
             @Html.RadioButton("FormLevel", 2, false)  Intermediate - $2 a day <br />
             @Html.RadioButton("FormLevel", 3, false)  Advanced - Variable income each day <br />
        </div>
    </div>



    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-default" value="Register" />
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
